// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Infrastructure.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DayPlanId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DayPlanId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("Infrastructure.Model.Body", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BodyMass")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Bodies");
                });

            modelBuilder.Entity("Infrastructure.Model.Calendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Calendars");
                });

            modelBuilder.Entity("Infrastructure.Model.DailyDoseLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IngredientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.ToTable("DailyDoseLimits");
                });

            modelBuilder.Entity("Infrastructure.Model.DayPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CalendarId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CalendarId");

                    b.ToTable("DayPlans");
                });

            modelBuilder.Entity("Infrastructure.Model.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DayPlanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExerciseDuration")
                        .HasColumnType("datetime2");

                    b.Property<int>("KCalBurned")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DayPlanId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("Infrastructure.Model.ExerciseBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Effort")
                        .HasColumnType("float");

                    b.Property<string>("ExerciseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExerciseBases");
                });

            modelBuilder.Entity("Infrastructure.Model.Ingredients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MealItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MealItemId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Infrastructure.Model.MealItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KCal")
                        .HasColumnType("int");

                    b.Property<int?>("MealId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MealId");

                    b.ToTable("MealItems");
                });

            modelBuilder.Entity("Infrastructure.Meal", b =>
                {
                    b.HasOne("Infrastructure.Model.DayPlan", null)
                        .WithMany("Meals")
                        .HasForeignKey("DayPlanId");
                });

            modelBuilder.Entity("Infrastructure.Model.DailyDoseLimit", b =>
                {
                    b.HasOne("Infrastructure.Model.Ingredients", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("Infrastructure.Model.DayPlan", b =>
                {
                    b.HasOne("Infrastructure.Model.Calendar", null)
                        .WithMany("DayPlans")
                        .HasForeignKey("CalendarId");
                });

            modelBuilder.Entity("Infrastructure.Model.Exercise", b =>
                {
                    b.HasOne("Infrastructure.Model.DayPlan", null)
                        .WithMany("Exercises")
                        .HasForeignKey("DayPlanId");
                });

            modelBuilder.Entity("Infrastructure.Model.Ingredients", b =>
                {
                    b.HasOne("Infrastructure.Model.MealItem", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("MealItemId");
                });

            modelBuilder.Entity("Infrastructure.Model.MealItem", b =>
                {
                    b.HasOne("Infrastructure.Meal", null)
                        .WithMany("MealItems")
                        .HasForeignKey("MealId");
                });

            modelBuilder.Entity("Infrastructure.Meal", b =>
                {
                    b.Navigation("MealItems");
                });

            modelBuilder.Entity("Infrastructure.Model.Calendar", b =>
                {
                    b.Navigation("DayPlans");
                });

            modelBuilder.Entity("Infrastructure.Model.DayPlan", b =>
                {
                    b.Navigation("Exercises");

                    b.Navigation("Meals");
                });

            modelBuilder.Entity("Infrastructure.Model.MealItem", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
